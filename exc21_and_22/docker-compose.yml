version: '3.8'

services:
  client-build:
    image: client-build-with-nginx
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client/:/usr/src/app
    environment:
      REACT_APP_BACKEND_URL: "http://localhost:8080/api"
      NODE_ENV: "production"
    container_name: client-with-nginx
  server-build:
    image: back-build-with-nginx
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      REDIS_URL: //redis:6379
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
    volumes:
      - ./server/:/usr/src/app
    depends_on:
      - mongo
      - redis
    container_name: back-with-nginx
  mongo:
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./server/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - ./server/mongo_data:/data/db
  redis:
    image: redis:6.2-alpine
    ports:
      - 6379:6379
    command: [ 'redis-server', '--appendonly', 'yes' ]
    volumes:
      - ./server/redis_data:/data
  nginx: 
    image: nginx:1.20.1
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - client-build
      - server-build
  debug-helper:
    image: busybox
